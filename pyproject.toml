[tool.poetry]
name = "atciss"
version = "0.1.0"
description = "VATSIM Germany ATCISS"
authors = ["Franz Pletz <fpletz@fnordicwalking.de>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/vatger/atciss"

[tool.poetry.dependencies]
python = "~3.11"
aiohttp = "^3.9.1"
alembic = "^1.13.1"
asgi-correlation-id = "^4.2.0"
asgiref = "^3.7.2"
astral = "^3.2"
asyncpg = "^0.29.0"
beautifulsoup4 = "^4.12.2"
celery = {version = "^5.3.5", extras = ["redis,gevent"]}
click = "^8.1"
fastapi = "^0.108"
fastapi-async-sqlalchemy = "^0.6.0"
geoalchemy2 = "^0.14.3"
greenlet = "^3.0.3"
haversine = "^2.8.0"
lark = "^1"
loguru = "^0.7.2"
lxml = "^5.0.0"
metar = { git = "https://github.com/globin/python-metar", rev = "35efaa6f76d00bd53b9e29bb0f87fbc3c80d8af2" }
prometheus-fastapi-instrumentator = "^6.1.0"
pydantic = "^2"
pydantic-settings = "^2.0.2"
pydantic-xml = {extras = ["lxml"], version = "^2.7.0"}
pynotam = { git = "https://github.com/globin/PyNotam", rev = "84b741863d09aaa616e6f378a2e6e5eab8df706f" }
python-dateutil = "^2.8.2"
python-jose = "^3.3.0"
redis = "^4"
shapely = "^2.0.2"
sqlalchemy = { version = "^2.0.25", extras = [ "asyncio" ] }
sqlmodel = "0.0.14"
uvicorn = {extras = ["standard"], version = "^0.25"}
watchfiles = "~0.21.0"
xmltodict = "^0.13.0"
regex = "^2023.12.25"
flower = "^2.0.1"

[tool.poetry.group.dev.dependencies]
pylint = "^3.0"
types-beautifulsoup4 = "^4.12.0.5"
types-python-jose = "^3.3.4.8"
mypy = "^1.8.0"
pyright = "1.1.344"
ruff = "0.1.8"
celery-types = "^0.20.0"
flower = "^2.0.1"
types-xmltodict = "^0.13.0.3"
pyrasite = "^2.0"

[tool.poetry.scripts]
atciss = 'atciss.cli:cli'
celery = 'celery.__main__:main'
alembic = 'alembic.config:main'

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
exclude = [
  "atciss/app/views/notam.py",
]
python_version = '3.11'
show_error_codes = true
follow_imports = 'silent'
strict_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_reexport = true
warn_unused_configs = true
disallow_subclassing_any = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
disallow_untyped_calls = true
disallow_untyped_defs = true
implicit_optional = true

[[tool.mypy.overrides]]
module = [
    "parsimonious.*",
    "redis.*",
]
ignore_missing_imports = true

[tool.pylint.format]
jobs = 0
disable = [
  "W1203", # logging-fstring-interpolation
  "R0902", # too-many-instance-attributes
  "R0903", # too-few-public-methods
  "C0114", # missing-module-docstring
  "C0115", # missing-class-docstring
  "C0116", # missing-function-docstring
  "W0511", # fixme
  "C0103", # invalid-name
]
output-format = "colorized"
max-line-length = "101"
max-locals = 20

[tool.pyright]
include = ["atciss"]

pythonVersion = "3.11"
pythonPlatform = "Linux"

typeCheckingMode = "strict"

reportIncompatibleVariableOverride = false
reportMissingTypeArgument = false
reportUnknownArgumentType = false
reportUnknownMemberType = false
reportUnknownVariableType = false

reportCallInDefaultInitializer = "error"
reportImplicitOverride = "error"
reportImplicitStringConcatenation = "error"
reportImportCycles = "error"
reportMissingSuperCall = "error"
reportPropertyTypeMismatch = "error"
reportShadowedImports = "error"
reportUninitializedInstanceVariable = "error"
# reportUnnecessaryTypeIgnoreComment = "error"
reportUnusedCallResult = "error"

[tool.ruff]
line-length = 100
target-version = "py311"
