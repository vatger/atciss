[project]
name = "atciss"
version = "0.1.0"
description = "VATSIM Germany ATCISS"
authors = [
        { name = "Franz Pletz", email = "fpletz@fnordicwalking.de" },
        { name = "Robin Gloster", email = "mail@glob.in" },
        { name = "Alex Legler" },
]
license = "MIT"
readme = "README.md"

dependencies = [
        "aiohttp>=3.11.18,<4",
        "alembic>=1.15.2,<2",
        "asgi-correlation-id>=4.3.4,<5",
        "asgiref>=3.8.1,<4",
        "astral>=3.2,<4",
        "asyncpg>=0.30.0,<0.31",
        "beautifulsoup4>=4.13.4,<5",
        "click>=8.2,<9",
        "fastapi[all]>=0.116,<0.117",
        "geoalchemy2>=0.18,<0.19",
        "greenlet>=3.2.1,<4",
        "haversine>=2.9.0,<3",
        "jinja2>=3.1.5,<4",
        "lark>=1,<2",
        "loguru>=0.7.2",
        "lxml>=5.4.0",
        "orjson>=3.10.11,<4",
        "prometheus-fastapi-instrumentator>=7.1.0",
        "pydantic-settings>=2.9.1,<3",
        "pydantic-xml[lxml]>=2.16,<3",
        "pydantic>=2.11,<3",
        "python-dateutil>=2.9.0,<3",
        "python-jose>=3.4.0,<4",
        "redis>=6,<7",
        "regex==2024.11.6",
        "shapely>=2.0.6,<3",
        "sqlalchemy[asyncio]>=2.0.40,<3",
        "sqlmodel==0.0.24",
        "taskiq-fastapi>=0.3.5,<0.4",
        "taskiq-redis>=1,<2",
        "taskiq>=0.11.18,<0.12",
        "uvicorn[standard]>=0.35,<0.36",
        "watchfiles>=1,<2",
        "xmltodict>=0.14.2",
        "eaup",
        "loa",
        "metar",
        "pynotam",
        "vatsim",
        "geojson>=3.2.0",
]

[project.scripts]
atciss = "atciss.cli:cli"

[tool.uv.sources]
loa = { git = "https://github.com/vatger-nav/loa.git", rev = "a4ba3ec01c496522e794b379e7181e3b813ebf7c" }
metar = { git = "https://github.com/globin/python-metar", rev = "35efaa6f76d00bd53b9e29bb0f87fbc3c80d8af2" }
pynotam = { git = "https://github.com/globin/PyNotam", rev = "84b741863d09aaa616e6f378a2e6e5eab8df706f" }
eaup = { git = "https://gitlab.com/fpletz/eaup.git", rev = "d9270df4097ca62359215cc762d41a0827d8dd06" }
vatsim = { git = "https://github.com/fpletz/python-vatsim.git", rev = "ef56bdbc6a4348d8cbefbf6b9fe0aa98e0aed06c" }

[dependency-groups]
dev = [
        "pylint>=3.3,<4",
        "types-beautifulsoup4>=4.12.0.20241020,<5",
        "types-python-jose>=3.4.0.20250224,<4",
        "mypy>=1.14.0,<2",
        "pyright>=1.1.400,<2",
        "ruff>=0.12.0,<0.13",
        "types-xmltodict>=0.14.0.20241009,<0.15",
        "pyrasite>=2.0,<3",
        "taskiq[reload]>=0.11.18,<0.12",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.mypy]
exclude = ["atciss/app/views/notam.py"]
python_version = '3.11'
show_error_codes = true
follow_imports = 'silent'
strict_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_reexport = true
warn_unused_configs = true
disallow_subclassing_any = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
disallow_untyped_calls = true
disallow_untyped_defs = true
implicit_optional = true

[[tool.mypy.overrides]]
module = ["parsimonious.*", "redis.*"]
ignore_missing_imports = true

[tool.pylint.format]
jobs = 0
disable = [
        "W0611", # unused-import
        "R0902", # too-many-instance-attributes
        "R0903", # too-few-public-methods
        "C0114", # missing-module-docstring
        "C0115", # missing-class-docstring
        "C0116", # missing-function-docstring
        "C0411", # wrong-import-order (buggy, ruff is better)
        "W0511", # fixme
        "C0103", # invalid-name
]
output-format = "colorized"
max-line-length = 100
max-locals = 20

[tool.pyright]
include = ["atciss"]

pythonVersion = "3.11"
pythonPlatform = "Linux"

typeCheckingMode = "strict"

reportIncompatibleVariableOverride = false
reportMissingTypeArgument = false
reportUnknownArgumentType = false
reportUnknownMemberType = false
reportUnknownParameterType = false
reportUnknownVariableType = false
reportUnusedImport = false

reportCallInDefaultInitializer = "error"
reportImplicitOverride = "error"
reportImplicitStringConcatenation = "error"
reportImportCycles = "error"
reportMissingSuperCall = "error"
reportPropertyTypeMismatch = "error"
reportShadowedImports = "error"
reportUninitializedInstanceVariable = "error"
# reportUnnecessaryTypeIgnoreComment = "error"
reportUnusedCallResult = "error"

[tool.ruff]
line-length = 100
target-version = "py311"
preview = true

[tool.ruff.lint]
select = [
        "E",     # pycodestyle errors
        "W",     # pycodestyle warnings
        "F",     # pyflakes
        "C90",   # mccabe
        "I",     # isort
        "ASYNC", # flake8-async
        "B",     # flake8-bugbear
        "BLE",   # flake8-blind-except
        "COM",   # flake8-commas
        "C4",    # flake8-comprehensions
        "DTZ",   # flake8-datetimez
        "EM",    # flake8-errmsg
        "ICN",   # flake8-import-conventions
        "PYI",   # flake8-pyi
        "Q",     # flake8-quotes
        "SIM",   # flake8-simplify
        "TCH",   # flake8-typechecking
        "PTH",   # flake8-use-pathlib
        "UP",    # pyupgrade
        "RUF",   # ruff-specific
        "TRY",   # tryceratops
        "FURB",  # refurb
]
ignore = ["COM812"]
